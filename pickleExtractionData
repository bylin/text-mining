#!/usr/bin/python2.7
# Author: Brian Lin
'''
'''
import logging
import sys
import argparse
import pickle

def main():
	args = parseArgs()
	relations = getRelations(args.relation_file)
	pickle.dump(relations, args.pickle_file)
	authors = getAuthors(args.authors)
	pickle.dump(authors, args.pickle_file)
	pickle.dump(greekUnicode, args.pickle_file)

def getRelations(inputFile):
	relations = set()
	for line in inputFile:
		stem, forms = line.strip().split(':')
		for form in forms.split('|'):
			relations.add(form)
	# convert relations to hashable frozenset (immutable)
	return frozenset(relations)

def getAuthors(inputFile):
	authors = set()
	for line in inputFile:
		authors.add(line.strip())
	return authors

def parseArgs():
	parser = argparse.ArgumentParser()
	parser.add_argument('-v', '--verbose', action='store_true', help='Display verbose output, logging level set to INFO.') 
	parser.add_argument('-r', '--relation_file', required=True, type=argparse.FileType('r'), help='Input relations text file from website') 
	parser.add_argument('-a', '--authors', required=True, type=argparse.FileType('r'), help='Input text file with author surnames')
	parser.add_argument('-o', '--pickle_file', type=argparse.FileType('w'), required=True, help='Output Python pickled file')
	args = parser.parse_args()
	if args.verbose:
	    logging.basicConfig(level=logging.INFO)
	return args

greekUnicode = {
    u'\u0391': 'Alpha',
    u'\u0392': 'Beta',
    u'\u0393': 'Gamma',
    u'\u0394': 'Delta',
    u'\u0395': 'Epsilon',
    u'\u0396': 'Zeta',
    u'\u0397': 'Eta',
    u'\u0398': 'Theta',
    u'\u0399': 'Iota',
    u'\u039A': 'Kappa',
    u'\u039B': 'Lamda',
    u'\u039C': 'Mu',
    u'\u039D': 'Nu',
    u'\u039E': 'Xi',
    u'\u039F': 'Omicron',
    u'\u03A0': 'Pi',
    u'\u03A1': 'Rho',
    u'\u03A3': 'Sigma',
    u'\u03A4': 'Tau',
    u'\u03A5': 'Upsilon',
    u'\u03A6': 'Phi',
    u'\u03A7': 'Chi',
    u'\u03A8': 'Psi',
    u'\u03A9': 'Omega',
    u'\u03B1': 'alpha',
    u'\u03B2': 'beta',
    u'\u03B3': 'gamma',
    u'\u03B4': 'delta',
    u'\u03B5': 'epsilon',
    u'\u03B6': 'zeta',
    u'\u03B7': 'eta',
    u'\u03B8': 'theta',
    u'\u03B9': 'iota',
    u'\u03BA': 'kappa',
    u'\u03BB': 'lamda',
    u'\u03BC': 'mu',
    u'\u03BD': 'nu',
    u'\u03BE': 'xi',
    u'\u03BF': 'omicron',
    u'\u03C0': 'pi',
    u'\u03C1': 'rho',
    u'\u03C3': 'sigma',
    u'\u03C4': 'tau',
    u'\u03C5': 'upsilon',
    u'\u03C6': 'phi',
    u'\u03C7': 'chi',
    u'\u03C8': 'psi',
    u'\u03C9': 'omega',
}

if __name__ == '__main__':
	main()
